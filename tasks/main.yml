---
- name: Combine defaults with vars
  ansible.builtin.set_fact:
    nftables: "{{ default_nftables | ansible.builtin.combine(nftables, recursive=true) }}"

- name: Check for required vars
  ansible.builtin.assert:
    that: item is defined
    success_msg: "{{ item }} is defined"
    fail_msg: "{{ item }} is not defined"
  loop: "{{ nft_required_vars }}"

- name: Include RHEL installation
  ansible.builtin.import_tasks: install/rhel.yml
  when: ansible_facts["os_family"] == "RedHat"

- name: Include Debian installation
  ansible.builtin.import_tasks: install/debian.yml
  when: ansible_facts["os_family"] == "Debian"

- name: Nftables packages are present
  become: true
  ansible.builtin.apt:
    name: "{{ nft_pkgs }}"
    state: present
    update_cache: true
  when: ansible_facts["os_family"] == "Debian"

- name: Config dir exists
  become: true
  ansible.builtin.file:
    path: "{{ nftables.config_dir }}"
    state: directory
    mode: u=rwX,g=,o=
    owner: root
    group: root

- name: Template nftables vars
  become: true
  ansible.builtin.template:
    src: "etc/nftables/vars.nft.j2"
    dest: "{{ nftables.config_dir }}/vars.nft"
    mode: u=rwx,g=,o=
    owner: root
    group: root
    validate: /usr/sbin/nft -c -f %s
  notify: restart nftables
  when: nftables.vars

- name: Template nftables tables
  become: true
  ansible.builtin.template:
    src: "etc/nftables/table.nft.j2"
    dest: "{{ nftables.config_dir }}/{{ _table.key }}.nft"
    mode: u=rwx,g=,o=
    owner: root
    group: root
    validate: /usr/sbin/nft -c -f %s
  notify: restart nftables
  vars:
    table: "{{ _table.key }}"
    chains: "{{ _table.value }}"
  loop: "{{ nftables.tables | dict2items }}"
  loop_control:
    loop_var: "_table"

- name: Template nftables.conf
  become: true
  ansible.builtin.template:
    src: "etc/nftables.conf.j2"
    dest: "{{ nft_rhel_conf_file }}"
    mode: u=rwx,g=,o=
    owner: root
    group: root
    validate: /usr/sbin/nft -c -f %s
  when: ansible_facts["os_family"] == "RedHat"
  notify: restart nftables

- name: Template nftables.conf
  become: true
  ansible.builtin.template:
    src: "etc/nftables.conf.j2"
    dest: "{{ nft_debian_conf_file }}"
    mode: u=rwx,g=,o=
    owner: root
    group: root
    validate: /usr/sbin/nft -c -f %s
  when: ansible_facts["os_family"] == "Debian"
  notify: restart nftables
